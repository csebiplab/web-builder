import mongoose, { Schema, Document, model } from "mongoose";

// Component Schema
const ComponentSchema = new Schema(
  {
    type: { type: String, required: true }, // e.g., 'text', 'image', etc.
    id: { type: String, required: true }, // Unique identifier for the component
    content: { type: Schema.Types.Mixed, default: null }, // Text, image URL, etc.
    style: { type: Schema.Types.Mixed, default: {} }, // Custom styles as JSON
  },
  { _id: false }
); // Disable autogenerated `_id` for subdocs

// Column Schema
const ColumnSchema = new Schema(
  {
    id: { type: String, required: true }, // Unique identifier
    width: { type: String, required: true }, // Column width, e.g., '50%'
    components: [ComponentSchema], // Nested components
  },
  { _id: false }
);

// Row Schema
const RowSchema = new Schema(
  {
    id: { type: String, required: true }, // Unique identifier
    columns: [ColumnSchema], // Array of columns
  },
  { _id: false }
);

// Page Schema
const PageSchema = new Schema({
  title: { type: String, required: true }, // Page title
  slug: { type: String, required: true, unique: true }, // URL-friendly identifier
  designData: [RowSchema], // Page layout as JSON
  createdAt: { type: Date, default: Date.now }, // Creation timestamp
  updatedAt: { type: Date, default: Date.now }, // Last updated timestamp
});

const PageModel = model<Document>("Page", PageSchema);
export default PageModel;
